When would you want to use a remote repository rather than keeping all your work
local?

    I would use a remote repository rather than keeping all my work locally if
    I were using another computer, or collaborating with a group of developers
    on a project. I like to keep a copy locally until I reach a final outcome then
    I can delete my local copy.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I might want to always pull changes manually rather than having Git
    automatically stay up-to-date with my remote repository because
    the changes might not be complete or finalized. Even though I've
    committed them I can still improve them further before adding them
    to a remote.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks: used when you want to use an existing repository and credit the
    author.

    Clones: used to copy an existing repository to your local machine or from
    a machine to GitHub.

    Branches: used inside a git repository to track versioning, edits, and
    updates to files in a given repository.

    To optimize your version control you'll combine these together. For
    example: to save time you'd like to fork a repository for a framework,
    clone it to a local machine, and begin branching to make improvements
    and to test a new feature you'd like to add.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
